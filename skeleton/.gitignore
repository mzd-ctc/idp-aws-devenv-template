# Terraform
*.tfstate
*.tfstate.*
*.tfvars
!example.tfvars
!terraform.tfvars.example
.terraform/
.terraform.lock.hcl
terraform.tfstate.backup
.terraformrc
terraform.rc

# Local .terraform directories
**/.terraform/*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*
*.tfplan
*.tfplan.json

# Ignore CLI configuration files
.terraformrc
terraform.rc

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# Logs
*.log
logs/

# Temporary files
*.tmp
*.temp
temp/
tmp/

# AWS credentials (if accidentally committed)
.aws/
aws-credentials

# Environment variables
.env
.env.local
.env.*.local

# Node.js (if using any Node.js tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Python (if using any Python tools)
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
venv/
ENV/
env.bak/
venv.bak/

# Backup files
*.bak
*.backup
*.old

# Local development files
local/
dev/

# Template files
template.yaml 